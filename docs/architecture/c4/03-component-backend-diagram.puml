@startuml WhatsApp Dashboard - Backend Components
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()

title Diagrama de Componentes - Backend Django

Container(web_app, "Web Application", "React", "Frontend")
ContainerDb(database, "Database", "PostgreSQL", "Dados")
ContainerDb(redis, "Redis", "Redis", "Broker")
System_Ext(evolution, "Evolution API", "WhatsApp API")

Container_Boundary(api, "Backend API - Django") {
    Component(api_views, "API Views", "Django REST Framework", "Endpoints REST:\n- /messages/\n- /contacts/\n- /webhooks/")
    Component(serializers, "Serializers", "DRF Serializers", "Serialização e validação de dados")
    Component(models, "Models", "Django ORM", "- Message\n- Contact\n- WebhookLog")
    Component(webhook_processor, "Webhook Processor", "Python", "Processa webhooks:\n- MESSAGES_UPSERT\n- MESSAGES_UPDATE\n- CONNECTION_UPDATE")
    Component(celery_tasks, "Celery Tasks", "Celery", "- process_webhook\n- cleanup_old_logs\n- sync_contacts")
    Component(evolution_client, "Evolution Client", "Requests", "Cliente HTTP para Evolution API")
}

' Frontend para Backend
Rel(web_app, api_views, "Requisições HTTP", "JSON/HTTPS")

' Backend interno
Rel(api_views, serializers, "Valida dados")
Rel(serializers, models, "Acessa ORM")
Rel(api_views, celery_tasks, "Dispara tarefas")
Rel(api_views, evolution_client, "Gerencia instâncias")
Rel(webhook_processor, models, "Salva mensagens")
Rel(celery_tasks, webhook_processor, "Processa payloads")

' Backend para externos
Rel(models, database, "SQL")
Rel(celery_tasks, redis, "Publica/Consome")
Rel(evolution_client, evolution, "REST API")

SHOW_LEGEND()
@enduml